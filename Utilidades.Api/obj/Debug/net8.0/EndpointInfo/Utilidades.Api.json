{
  "openapi": "3.0.4",
  "info": {
    "title": "Server API",
    "description": "This API features all public available endpoints showing different API features.",
    "version": "1.0"
  },
  "paths": {
    "/api/Clabes/{ahorroId}": {
      "get": {
        "tags": [
          "Clabes"
        ],
        "summary": "Genera un cuenta clabe fake valida con los estandadres de México",
        "parameters": [
          {
            "name": "ahorroId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/CodigosPostales/Estados": {
      "get": {
        "tags": [
          "CodigosPostales"
        ],
        "summary": "Lista de estados",
        "operationId": "Estados",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Estado"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CodigosPostales/{estado}/Alcaldias": {
      "get": {
        "tags": [
          "CodigosPostales"
        ],
        "summary": "Lista de municipios por estado",
        "parameters": [
          {
            "name": "estado",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Alcaldia"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CodigosPostales/Estados/{estado}/Alcaldias/{alcaldia}": {
      "get": {
        "tags": [
          "CodigosPostales"
        ],
        "summary": "Códigos por estado y alcaldia",
        "parameters": [
          {
            "name": "estado",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alcaldia",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CodigoPostalDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CodigosPostales/{codigoPostal}": {
      "get": {
        "tags": [
          "CodigosPostales"
        ],
        "summary": "Obtener la lista de codigos postales",
        "parameters": [
          {
            "name": "codigoPostal",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 5,
              "minLength": 5,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CodigoPostalDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CodigosPostales/{asentamiento}/Buscar": {
      "get": {
        "tags": [
          "CodigosPostales"
        ],
        "summary": "Obtener los codigos psotales a partir del nombre de una colonia",
        "parameters": [
          {
            "name": "asentamiento",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CodigoPostalDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CodigosPostales/Estados/{estado}/Alcaldias/{alcaldia}/{asentamiento}/Buscar": {
      "get": {
        "tags": [
          "CodigosPostales"
        ],
        "summary": "Obtener los codigos psotales a partir del nombre de una colonia",
        "parameters": [
          {
            "name": "estado",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alcaldia",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asentamiento",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CodigoPostalDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CodigosPostales/Aleatorio": {
      "get": {
        "tags": [
          "CodigosPostales"
        ],
        "summary": "Obtiene un codigo postal aleatorio",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodigoPostalDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/CodigosPostales/Estados/{estado}/Aleatorio": {
      "get": {
        "tags": [
          "CodigosPostales"
        ],
        "summary": "Obtiene un codigo postal aleatorio",
        "parameters": [
          {
            "name": "estado",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodigoPostalDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/CodigosPostales": {
      "post": {
        "tags": [
          "CodigosPostales"
        ],
        "summary": "Subir coleccion de codigos postales",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "formFile"
                ],
                "type": "object",
                "properties": {
                  "formFile": {
                    "type": "string",
                    "description": "",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "formFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Direcciones": {
      "get": {
        "tags": [
          "Direcciones"
        ],
        "summary": "Otiene una dirección valida con coordenadas, es una colección de direcciones de bibliotecas en México",
        "parameters": [
          {
            "name": "numeroDeDirecciones",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Identificadores": {
      "get": {
        "tags": [
          "Identificadores"
        ],
        "summary": "Guid 32 caracteres, idMongoDb 24 caracteres, idFirebase 20 caracteres",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/InicioDeSesiones": {
      "post": {
        "tags": [
          "InicioDeSesiones"
        ],
        "summary": "Retorna token",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InicioDeSesionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InicioDeSesionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InicioDeSesionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Notas": {
      "get": {
        "tags": [
          "Notas"
        ],
        "summary": "Obtener todas las notas",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotaDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotaDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotaDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notas"
        ],
        "summary": "Agregar nota",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotaDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotaDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Notas"
        ],
        "summary": "Actualizar nota",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotaDtoIn"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotaDtoIn"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotaDtoIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/Peliculas": {
      "post": {
        "tags": [
          "Peliculas"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Poster": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Titulo": {
                    "type": "string"
                  },
                  "Resumen": {
                    "type": "string"
                  },
                  "Trailer": {
                    "type": "string"
                  },
                  "FechaDeVista": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "encoding": {
                "Poster": {
                  "style": "form"
                },
                "Titulo": {
                  "style": "form"
                },
                "Resumen": {
                  "style": "form"
                },
                "Trailer": {
                  "style": "form"
                },
                "FechaDeVista": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Peliculas"
        ],
        "parameters": [
          {
            "name": "vista",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/Peliculas/{id}": {
      "get": {
        "tags": [
          "Peliculas"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Peliculas"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Poster": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Titulo": {
                    "type": "string"
                  },
                  "Resumen": {
                    "type": "string"
                  },
                  "Trailer": {
                    "type": "string"
                  },
                  "FechaDeVista": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "encoding": {
                "Poster": {
                  "style": "form"
                },
                "Titulo": {
                  "style": "form"
                },
                "Resumen": {
                  "style": "form"
                },
                "Trailer": {
                  "style": "form"
                },
                "FechaDeVista": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/Peliculas/{id}/imagenes": {
      "get": {
        "tags": [
          "Peliculas"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v2/Peliculas/{id}/Vistas/{vista}": {
      "put": {
        "tags": [
          "Peliculas"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "vista",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PersonasFakes": {
      "get": {
        "tags": [
          "PersonasFakes"
        ],
        "summary": "Genera una persona fake con datos aleatorios",
        "parameters": [
          {
            "name": "numeroDePersonas",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Llaves/{llave}": {
      "get": {
        "tags": [
          "Productos"
        ],
        "parameters": [
          {
            "name": "llave",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Productos/{Llave}": {
      "post": {
        "tags": [
          "Productos"
        ],
        "parameters": [
          {
            "name": "llave",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Productos/{idEncodedKey}": {
      "get": {
        "tags": [
          "Productos"
        ],
        "parameters": [
          {
            "name": "idEncodedKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Productos"
        ],
        "parameters": [
          {
            "name": "idEncodedKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Productos/{idEncodedKey}/Activos/{estaActivo}": {
      "delete": {
        "tags": [
          "Productos"
        ],
        "parameters": [
          {
            "name": "idEncodedKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "estaActivo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TarjetasDeDebito": {
      "get": {
        "tags": [
          "TarjetasDeDebito"
        ],
        "summary": "Genera un número de tarjeta de débito válido según el algoritmo de Luhn y las convenciones de numeración de tarjetas.o",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Alcaldia": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "nombre": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodigoPostalDto": {
        "type": "object",
        "properties": {
          "codigoPostal": {
            "type": "string",
            "nullable": true
          },
          "alcaldiaId": {
            "type": "integer",
            "format": "int32"
          },
          "estado": {
            "type": "string",
            "nullable": true
          },
          "estadoId": {
            "type": "integer",
            "format": "int32"
          },
          "alcaldia": {
            "type": "string",
            "nullable": true
          },
          "tipoDeAsentamiento": {
            "type": "string",
            "nullable": true
          },
          "asentamiento": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Estado": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "nombre": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InicioDeSesionDto": {
        "type": "object",
        "properties": {
          "usuario": {
            "type": "string",
            "nullable": true
          },
          "contraseña": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotaDto": {
        "required": [
          "encodedKey",
          "tags",
          "valor01",
          "valor02"
        ],
        "type": "object",
        "properties": {
          "tags": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "valor01": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string"
          },
          "valor02": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "valor03": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "valor04": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "encodedKey": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "NotaDtoIn": {
        "required": [
          "tags",
          "valor01",
          "valor02"
        ],
        "type": "object",
        "properties": {
          "tags": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "valor01": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string"
          },
          "valor02": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "valor03": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "valor04": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductoDto": {
        "required": [
          "valor01"
        ],
        "type": "object",
        "properties": {
          "encodedKey": {
            "type": "string",
            "nullable": true
          },
          "valor01": {
            "minLength": 1,
            "type": "string"
          },
          "valor02": {
            "type": "string",
            "nullable": true
          },
          "valor03": {
            "type": "string",
            "nullable": true
          },
          "valor04": {
            "type": "string",
            "nullable": true
          },
          "fechaDeRegistro": {
            "type": "string",
            "format": "date-time"
          },
          "estaActivo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    }
  }
}